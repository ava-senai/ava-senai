#!/bin/bash

# Script para gerenciar migra√ß√µes do AVA Sesi Senai
# Uso: ./scripts/migrate.sh [comando]

set -e

# Configura√ß√µes
CONTAINER_NAME="main-backend"
DB_URL="postgres://postgres:postgres@postgres-sesi-senai:5432/sesi_senai?sslmode=disable"
MIGRATIONS_DIR="migrations"

# Fun√ß√£o para mostrar ajuda
show_help() {
    echo "üóÑÔ∏è  Gerenciador de Migra√ß√µes - AVA Sesi Senai"
    echo ""
    echo "Uso: ./scripts/migrate.sh [comando]"
    echo ""
    echo "Comandos dispon√≠veis:"
    echo "  up          - Executar todas as migra√ß√µes pendentes"
    echo "  down        - Reverter √∫ltima migra√ß√£o"
    echo "  reset       - Reverter todas as migra√ß√µes (DROP)"
    echo "  status      - Verificar status das migra√ß√µes"
    echo "  create      - Criar nova migra√ß√£o (ex: ./scripts/migrate.sh create create_users_table)"
    echo "  help        - Mostrar esta ajuda"
    echo ""
    echo "Exemplos:"
    echo "  ./scripts/migrate.sh up"
    echo "  ./scripts/migrate.sh status"
    echo "  ./scripts/migrate.sh create add_user_roles"
}

# Verificar se o container est√° rodando
check_container() {
    if ! docker ps | grep -q $CONTAINER_NAME; then
        echo "‚ùå Container $CONTAINER_NAME n√£o est√° rodando."
        echo "Execute: docker-compose up -d"
        exit 1
    fi
}

# Executar comando goose
run_goose() {
    local command=$1
    docker exec -it $CONTAINER_NAME goose -dir $MIGRATIONS_DIR postgres "$DB_URL" $command
}

# Fun√ß√£o principal
main() {
    local command=${1:-help}
    
    case $command in
        "up")
            echo "üîÑ Executando migra√ß√µes pendentes..."
            check_container
            run_goose "up"
            ;;
        "down")
            echo "‚¨áÔ∏è  Revertendo √∫ltima migra√ß√£o..."
            check_container
            run_goose "down"
            ;;
        "reset")
            echo "üóëÔ∏è  Revertendo todas as migra√ß√µes..."
            check_container
            run_goose "down-to 0"
            ;;
        "status")
            echo "üìä Verificando status das migra√ß√µes..."
            check_container
            run_goose "status"
            ;;
        "create")
            local migration_name=$2
            if [ -z "$migration_name" ]; then
                echo "‚ùå Nome da migra√ß√£o √© obrigat√≥rio."
                echo "Exemplo: ./scripts/migrate.sh create create_users_table"
                exit 1
            fi
            echo "üìù Criando nova migra√ß√£o: $migration_name"
            check_container
            run_goose "create $migration_name sql"
            ;;
        "help"|*)
            show_help
            ;;
    esac
}

# Executar fun√ß√£o principal
main "$@"